tool:
  msbuild:
    installations:
    - home: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\MSBuild\\15.0\\Bin"
      name: "msbuild-vs2017buildtools-15"
jenkins:
  securityRealm:
    googleOAuth2:
      clientId: "<%= @options_hash['google_oauth_client_id'] %>"
      clientSecret: "<%= @options_hash['google_oauth_client_secret'] %>"
  systemMessage: "Jenkins configured automatically by Jenkins Configuration as Code Plugin\n\n"
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    globalMatrix:
      grantedPermissions:
<% @options_hash['clients_rbac'].each do |roles_list| -%>
<% roles_list.each do |users_list| -%>
<% users_list[1].each do |user| -%>
      - "<%= users_list[0] %>:<%= user %>"
<% end -%>
<% end -%>
<% end -%>
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  mode: NORMAL
  numExecutors: 2
  primaryView:
    all:
      name: "all"
  quietPeriod: 5
  scmCheckoutRetryCount: 0
  slaveAgentPort: 50000
  views:
  - all:
      name: "all"
  clouds:
  - amazonEC2:
      cloudName: "ec2_slave"
      credentialsId: ""
      instanceCapStr: "2"
      privateKey: |
<%= @options_hash['windows_slave_private_key'] %>
      region: "<%= @ec2_metadata['placement']['availability-zone'][0..-2] %>"
      roleArn: ""
      roleSessionName: ""
      useInstanceProfileForCredentials: true
      templates:
      - ami: "<%= @options_hash['windows_slave_ami'] %>"
        amiType:
          windowsData:
            bootDelay: "3"
            password: "<%= @options_hash['windows_slave_password'] %>"
            useHTTPS: false
        zone: "<%= @ec2_metadata['placement']['availability-zone'] %>"
        description: "windows-server-2012"
        securityGroups: "<%= @options_hash['windows_slave_securitygroups'] %>"
        remoteFS: "c:\\jenkins"
        type: "<%= @options_hash['windows_slave_type'] %>"
        ebsOptimized: false
        labelString: "windows-server-2012"
        mode: "NORMAL"
        initScript: ""
        tmpDir: ""
        numExecutors: 3
        remoteAdmin: "Administrator"
        subnetId: "<%= @ec2_metadata['network']['interfaces']['macs'][@ec2_metadata['network']['interfaces']['macs'].keys[0]]['subnet-id'] %>"
        idleTerminationMinutes: "6000"
        iamInstanceProfile: "arn:aws:iam::<%= @ec2_metadata['network']['interfaces']['macs'][@ec2_metadata['network']['interfaces']['macs'].keys[0]]['owner-id'] %>:instance-profile/jenkins-slave-dev"
        deleteRootOnTermination: true
        useEphemeralDevices: false
        customDeviceMapping: "/dev/sda1=:125"
        instanceCapStr: "2"
        stopOnTerminate: false
        usePrivateDnsName: false
        associatePublicIp: false
        useDedicatedTenancy: false
        launchTimeoutStr: "0"
        connectBySSHProcess: false
        connectUsingPublicIp: false
        tags:
        <%- @options_hash['windows_slave_tags'].each do |tag, val| -%>
        - name: "<%= tag %>"
          value: "<%= val %>"
        <%- end -%>
        userData: |
          <powershell>

          Set-ExecutionPolicy Unrestricted -Scope LocalMachine -Force -ErrorAction Ignore

          # Set admin password
          net user Administrator <%= @options_hash['windows_slave_password'] %>

          # Don't set this before Set-ExecutionPolicy as it throws an error
          $ErrorActionPreference = "stop"
          $bucket = "gw-devops-public"
          $javafile = "jre-windows-x64.exe"
          $puppetfile = "puppet-agent-6.1.0-x64.msi"
          $tmpfolder = $env:temp
          $temppath = "$tmpfolder\$javafile"
          $puppetpath = "$tmpfolder\$puppetfile"
          read-s3object -BucketName $bucket -key $javafile -File $temppath 
          Start-Process -FilePath $temppath -ArgumentList  "/s"  -Wait -Verbose -PassThru
          Start-Sleep -s 35
          read-s3object -BucketName $bucket -key $puppetfile -File $puppetpath

          $install_args = @("/qn", "/norestart","/i", $puppetpath, "PUPPET_AGENT_STARTUP_MODE=Disabled")
          $process = Start-Process -FilePath msiexec.exe -ArgumentList $install_args -Wait -PassThru
          Start-Sleep -s 35
          $puppet_agent_args = @("agent", "--onetime", "--verbose", "--no-daemonize", "--no-usecacheonfailure", "--no-splay", "--show_diff", "--server", "puppet")
          Start-Process -FilePath "C:\Program Files\Puppet Labs\Puppet\bin\puppet" -ArgumentList $puppet_agent_args -Wait -PassThru
          Start-Sleep -s 35
          Start-Process -FilePath "C:\Program Files\Puppet Labs\Puppet\bin\puppet" -ArgumentList $puppet_agent_args -Wait -PassThru
          sc.exe config puppet start=auto
          net start puppet

          cmd.exe /c winrm quickconfig -q
          winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="8192"}'
          winrm set winrm/config/winrs '@{MaxProcessesPerShell="4096"}'
          winrm set winrm/config '@{MaxTimeoutms="1800000"}'
          winrm set winrm/config/service '@{AllowUnencrypted="true"}'
          winrm set winrm/config/service/auth '@{Basic="true"}'
          winrm set winrm/config/client '@{AllowUnencrypted="true"}'
          winrm set winrm/config/client/auth '@{Basic="true"}'

          netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow
          netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow

          net stop winrm
          sc.exe config winrm start=auto
          net start winrm
          </powershell>
      - ami: "<%= @options_hash['linux_slave_ami'] %>"
        amiType:
          unixData:
            sshPort: "22"
            slaveCommandPrefix: "\"sudo nice -n -5  su -c '"
            slaveCommandSuffix: "' ubuntu\""
        zone: "<%= @ec2_metadata['placement']['availability-zone'] %>"
        description: "ubuntu-16.04"
        securityGroups: "<%= @options_hash['linux_slave_securitygroups'] %>"
        remoteFS: "/home/ubuntu"
        type: "<%= @options_hash['linux_slave_type'] %>"
        ebsOptimized: false
        labelString: "ubuntu-16.04"
        mode: "NORMAL"
        initScript: |
          #!/bin/bash
          while [ ! -f /var/lib/cloud/instance/boot-finished ]; do
            echo "Waiting for Cloud init"
            sleep 150
          done
        tmpDir: ""
        numExecutors: 4
        remoteAdmin: "ubuntu"
        subnetId: "<%= @ec2_metadata['network']['interfaces']['macs'][@ec2_metadata['network']['interfaces']['macs'].keys[0]]['subnet-id'] %>"
        idleTerminationMinutes: "6000"
        iamInstanceProfile: "arn:aws:iam::<%= @ec2_metadata['network']['interfaces']['macs'][@ec2_metadata['network']['interfaces']['macs'].keys[0]]['owner-id'] %>:instance-profile/jenkins-slave-dev"
        deleteRootOnTermination: true
        useEphemeralDevices: false
        customDeviceMapping: "/dev/sda1=:125"
        instanceCapStr: "1"
        stopOnTerminate: false
        usePrivateDnsName: false
        associatePublicIp: false
        useDedicatedTenancy: false
        launchTimeoutStr: "0"
        connectBySSHProcess: true
        connectUsingPublicIp: false
        tags:
        <%- @options_hash['linux_slave_tags'].each do |tag, val| -%>
        - name: "<%= tag %>"
          value: "<%= val %>"
        <%- end -%>
        userData: |
          #!/bin/bash
          wget https://apt.puppetlabs.com/puppet6-release-xenial.deb
          sudo dpkg -i puppet6-release-xenial.deb
          flock --timeout 60 --exclusive --close /var/lib/dpkg/lock apt-get -y -o Dpkg::Options::="--force-confold" upgrade
          if [ $? -ne 0 ]; then
            echo "Another process has f-locked /var/lib/dpkg/lock" 1>&2
            exit 1
          fi
          sudo apt update -y
          sudo apt install puppet-agent -y
          sudo /opt/puppetlabs/bin/puppet agent --onetime --verbose --no-daemonize --no-usecacheonfailure --no-splay --show_diff --server puppet
          sudo /opt/puppetlabs/bin/puppet agent --onetime --verbose --no-daemonize --no-usecacheonfailure --no-splay --show_diff --server puppet
security:
  remotingCLI:
    enabled: false
unclassified:
  location:
    url: "http://jenkins.<%= @networking['domain'] %>:8080/"
jobs:
  - script: >
      pipelineJob('db-bootstrap') {
       definition {
        cpsScm {
            scm {
              git{ remote({
                           url('git@db-bootstrap.sshconfig:graduway/db-bootstrap.git')
                          })
                   branches('refs/heads/master')
                 }
            }
        }
        }
      }
  - script: >
      pipelineJob('web') {
       definition {
        cpsScm {
            scm {
              git{ remote({
                           url('git@web.sshconfig:graduway/web.git')
                          })
                   branches('refs/heads/antony-ci')
                 }
            }
          }
        }
      }
  - script: >
      pipelineJob('frontend') {
       definition {
        cpsScm {
            scm {
              git{ remote({
                           url('git@frontend.sshconfig:graduway/frontend.git')
                          })
                   branches('refs/heads/antony-ci')
                 }
            }
          }
        }
      }
  - script: >
      pipelineJob('build_all_frontend_mobile') {     
       definition {
        parameters {
           stringParam('branch','master')
           booleanParam('upload')
           choiceParam('track', ['internal', 'alpha', 'beta', 'production'])
           credentialsParam('resolver_credentials') {
             type('com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl')
             required()
             defaultValue('resolver-auth')
          }
           credentialsParam('ionic_credentials') {
             type('com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl')
             required()
             defaultValue('ionic-auth')
          }
           credentialsParam('googleplay_credentials') {
             type('com.google.jenkins.plugins.credentials.oauth.GoogleRobotPrivateKeyCredentials')    
             required()
             defaultValue('api-7277041141033059813-210766')
          }
           stringParam('build_job','build_frontend_android')
         }
         cpsScm {
            scm {
              git{ remote({
                           url('git@frontend.sshconfig:graduway/frontend.git')
                          })
                   branches('refs/heads/master')
                 }
              
            }
        scriptPath('jenkins/build_all_frontend_mobile.groovy')
          }
        }
      }
  - script: >
      pipelineJob('build_frontend_android') {
      logRotator {
         artifactNumToKeep(500)
         numToKeep(500)
       }
       definition {
        parameters {
           stringParam('branch','master')
           booleanParam('upload')
           stringParam('applicationid')
           choiceParam('track', ['internal', 'alpha', 'beta', 'production'])
           credentialsParam('resolver_credentials') {
             type('com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl')
             required()
             defaultValue('resolver-auth')
          }
           credentialsParam('ionic_credentials') {
             type('com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl')
             required()
             defaultValue('ionic-auth')
          }
           credentialsParam('googleplay_credentials') {
             type('com.google.jenkins.plugins.credentials.oauth.GoogleRobotPrivateKeyCredentials')
             required()
             defaultValue('api-7277041141033059813-210766')
          }
        }
        cpsScm {
            scm {
              git{ remote({
                           url('git@frontend.sshconfig:graduway/frontend.git')
                          })
                   branches('refs/heads/master')
                 }
            }
        scriptPath('jenkins/build_frontend_android.groovy')
        }
        }
      }
  - script: >
      pipelineJob('control') {
       definition {
        cpsScm {
            scm {
              git{ remote({
                           url('git@ci-control.sshconfig:graduway/ci-control.git')
                          })
                   branches('refs/heads/master')
                 }
            }
          }
        }
      }

